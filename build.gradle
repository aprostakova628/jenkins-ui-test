apply plugin: 'java'

defaultTasks 'clean', 'test'

sourceSets {
  main {
    java {srcDir 'src'}
    resources {srcDir 'src'}
  }
  test {
    java {srcDir 'test'}
    resources {srcDir 'test'}
  }
}

repositories {
  mavenCentral()
}

dependencies {
  testCompile 'junit:junit:4.12'
  testCompile 'org.hamcrest:hamcrest-all:1.3'
  testCompile 'com.codeborne:selenide:5.0.0'
  testCompile('org.seleniumhq.selenium:selenium-safari-driver:3.13.0') { transitive = false }
  testCompile('org.seleniumhq.selenium:htmlunit-driver:2.31.0')
  testCompile('com.codeborne:phantomjsdriver:1.4.4') { transitive = false }
}

task libs(type: Sync) {
  from configurations.testCompile
  into "$buildDir/lib"
}

classes.dependsOn libs

[compileJava, compileTestJava]*.options.collect {options -> options.encoding = 'UTF-8'}
[compileJava, compileTestJava]*.options.collect {options -> options.debug = true}
[compileJava, compileTestJava]*.sourceCompatibility = 1.8
[compileJava, compileTestJava]*.targetCompatibility = 1.8

tasks.withType(Test).all { testTask ->
  testTask.systemProperties = [
    'file.encoding': 'UTF-8',
    'BUILD_URL': System.getenv()['BUILD_URL']
  ]
  testTask.testLogging.showStandardStreams = true
  testTask.exclude 'test/org/selenide/uitests/**/*'
  testTask.outputs.upToDateWhen { false }
}

task 'chrome'(type: Test) {
  systemProperties['selenide.browser'] = 'chrome'
  systemProperties['selenide.headless'] = 'false'
}

task 'firefox'(type: Test) {
  systemProperties['selenide.browser'] = 'firefox'
  systemProperties['selenide.headless'] = 'false'
}

task 'chrome-headless'(type: Test) {
  systemProperties['selenide.browser'] = 'chrome'
  systemProperties['selenide.headless'] = 'true'
}

task 'firefox-headless'(type: Test) {
  systemProperties['selenide.browser'] = 'firefox'
  systemProperties['selenide.headless'] = 'true'
}
